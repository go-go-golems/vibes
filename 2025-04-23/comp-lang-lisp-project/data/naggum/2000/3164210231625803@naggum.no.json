{
  "url": "https://www.xach.com/naggum/articles/3164210231625803@naggum.no.html",
  "id": "3164210231625803@naggum.no",
  "title": "Re: basic question (probably w/ no good answer)",
  "content": "\nSubject: Re: basic question (probably w/ no good answer)\nFrom: Erik Naggum <erik@naggum.no>\nDate: 2000/04/08\nNewsgroups: comp.lang.lisp\nMessage-ID: <3164210231625803@naggum.no>\n\n* Joe Marshall <jmarshall@alum.mit.edu>\n| The time you might `save' in compilation is negligable, a decent compiler\n| would produce similar code in either case, even if the code were\n| different, I can't imagine it would be so different as to have a\n| noticable impact on performance or code size, and if it *really* made a\n| noticable difference, I'd imagine that the compiler would be so piss-poor\n| as to be virtually unusable.\n\n  I think \"helping the compiler\" (not expressed in so many words, but in\n  meaning) is a metaphor that relates to the \"sufficiently smart compiler\",\n  and that it is not directly related to any actual assistance.  it's more\n  like \"would it hamper the smart compiler's ability to be as smart as it\n  could be\", or, as David put it \"do the right thing\".  I don't think so,\n  but it's a good question, nonetheless.  Rob pointed out that releasing\n  the hold on the objects might help (again, metaphorically) the garbage\n  collector pick up dead objects earlier, although it is hard for me right\n  now to imagine how this could b affected: scope analysis would cause the\n  bindings to go out of scope either way, and if these variables were in\n  call-frame slots or registers, they wouldn't necessarily be any more\n  garbage unless these slots were explicitly set to nil or something\n  similarly drastic (because the savings would be so limited compared to\n  the cost of doing this all over the place).\n\n| Making a hard-and-fast rule about this would lead to ridiculous coding\n| style if taken to the limit.\n\n  I'll trust readers of hard-and-fast rules to exercise their judgment and\n  not take things to ridiculous limits.\n\n  I think the question merits thought -- it's one of those small things\n  that it's too easy to waste time on because we're _not_ thinking about\n  it, and I for one think this question and questions like it would make it\n  a lot easier for more experienced programmers to help new programmers get\n  a feel for the language in actual use.  this is the \"experience\" part\n  that you get from reading lots of code and spending your working hours\n  among other Lisp programmers.  I think it's nice to see this newsgroup\n  assume part of that role, too.\n\n#:Erik\n\n",
  "date": "2000-04-08",
  "author": "Erik Naggum",
  "references": [],
  "source": "naggum"
}