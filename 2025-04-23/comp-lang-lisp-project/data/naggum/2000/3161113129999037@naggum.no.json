{
  "url": "https://www.xach.com/naggum/articles/3161113129999037@naggum.no.html",
  "id": "3161113129999037@naggum.no",
  "title": "Re: [executables] was: why Haskell hasn't replaced CL yet?",
  "content": "\nSubject: Re: [executables] was: why Haskell hasn't replaced CL yet?\nFrom: Erik Naggum <erik@naggum.no>\nDate: 2000/03/03\nNewsgroups: comp.lang.lisp\nMessage-ID: <3161113129999037@naggum.no>\n\n* not.for.email@not.for.spam\n| Or even better, Franz should post some ACL-built executables on their web\n| site, for just such purposes as this.\n\n  the Franz Inc sales staff and their engineers have related to me in the\n  past, and I'm sure I'm not misrepresenting them now, that they see\n  extremely little business value in catering to people who mainly execute\n  really tiny programs like the null program or \"hello, world\" programs.\n  rather, they have told me, and I have reason to believe them, that their\n  main customers use Common Lisp in large-scale applications.  their\n  pricing model, licensing terms, and their Value Added Reseller programs\n  all work very well together to indicate to me that they regard themselves\n  somewhat like Oracle, which also provides a huge environment that people\n  mainly use to deploy Really Important Applications, not somewhat like\n  Larry Wall and the Perl team, who provide a large fuzzy toy environment\n  that people mainly use to deploy Really Unimportant Applications.\n\n  catering to the RUA people is antithetical to doing business well with\n  the RIA people.  everybody in the computer business _knows_ this, except\n  the RUA people, but they don't _actually_ count, even though they think\n  they do.  for some bizarre reason, RUA people think their RUAs grow into\n  RIAs when in fact they don't.  vast networks of half-cooperating RUAs are\n  actually reimplemented by RIA people into a much smaller and leaner RIA\n  than the RUA people could ever hope to realize when push comes to shove.\n\n  RUA people can graduate into RIA people if they first learn to dispense\n  with the notion that RUAs _matter_.  they don't.  really.  nobody is\n  interested in how many RUAs you have written when they are looking for\n  people to write RIAs.  and I _mean_ nobody.  RIA people need to show\n  their ability to deal with complexity by reducing problems by solving the\n  really big problems.  RUA people show their ability to create complexity\n  by profilerating tiny solutions.  if making something you yourself can\n  use takes 1 unit of time, making something somebody else can use takes 3\n  units of time, and making a system that somebody else can use to to build\n  something that starts the whole scale all over again, takes 9 units of\n  time.  most people are extremely unprepared to build such systems, yet\n  this is what it takes to grow an RIA programmer from an RUA programmer.\n  that's why we need RIAs so people who think they are worth something in\n  this here overheated industry can write RUAs on top of RIAs and make\n  their employers happy -- they should not _ever_ believe that because they\n  are using an RIA to write RUAs, they are somehow equipped to write RIAs.\n\n| To really meet their needs, it has to fit not only the better paradigms\n| but also the ones they already use, even if it doesn't fit them as well\n| as C++ does.\n\n  for some reason, everybody realizes that civil engineering is different\n  from building a toy city in a sandbox.  you can't become a civil engineer\n  by presenting however many pictures of beautiful sandbox cities.  it\n  takes much more than that, different skills, realizing different needs,\n  different attitudes, different time lines, different economies.  for one\n  thing, you can't tear up a real city like you can destroy your sandbox\n  city and you can't just start over if you realize that you failed.  this\n  is the really big difference between RUAs and RIAs.  an RUA can be torn\n  down and replaced on short notice.  that's what makes it an RUA.  an RIA\n  can't be torn down without jeopardizing really serious investments, such\n  as the entire existence of a company.\n\n  there is hope for RUA people who are bored of writing small things, but\n  there is no hope at all for RUA people who still think \"hello, world\" is\n  interesting in any way, shape, or form.  RIA people think differently,\n  too -- most of them enjoy discussing large-scale philosophical issues,\n  and are usually very hostile to the really petty issues that most people\n  think are inordinately important in their own lives.  RUa people are well\n  suited to deal with their own lives in all its detail.  RIA people deal\n  with thousands and millions of lives in some particular respect.\n\n| The programmers know they will be working towards something better, but\n| they need a foundation to stand on while they work, and that means being\n| able to do what they do now, and advance from there one step at a time.\n\n  this is almost entirely false.  it is true in the sense that people need\n  to make one step at a time to make any serious changes to their lives,\n  but deciding to go from RUA to RIA is like going from playing doctor with\n  the kid next door (while yourself a kid -- we're not talking about Visual\n  Basic, here) to actually putting in the planning and all the effort to\n  _become_ a doctor some fifteen years later, during which time you don't\n  play doctor all that much, I can tell you.  deciding to go from RUA to\n  RIA is a _complete_ replacement of your whole mind-set towards what\n  computers can and should do.  (e.g., an RUA person may think it's OK for\n  a computer to crash.  an RIA person thinks of a dying machine the same\n  way a doctor does about a patient, or a military leader about soldiers:\n  it should not happen without conscious effort to avoid it to the best of\n  one's ability.)\n\n| But fear of other tradeoffs, such as a 1000 to 1 ratio of the above test,\n| might be what keeps them from proceeding.\n\n  no, what keeps them at bay is fear of insufficiency in becoming an RIA\n  person.  trust me on this -- I try every single day to find RIA material\n  among the hundreds and thousands of RUA people I brush against on the Net\n  and in real life.  perhaps one in 200 people are suitable, and the best\n  way you can spot them is they are _not_ exicited about trifling news and\n  hyped-up products or stale ideas in new packaging.\n\n| Your post of your numbers was appreciated and surprising.  I had no idea\n| ACL could start that fast on any machine.  I'm a lot more interested in\n| the possibility of using it for a future project now than I was before.\n\n  I'm sort of glad you appreciate it, but to me, the whole point was to get\n  _rid_ of your false concerns, not help you validate them.  I regret very\n  much if I did the latter.  start-up time is _completely_ irrelevant.  as\n  others have pointed out, if you need to perform a certain task often, you\n  investigate scaling issues and find that optimizing for scale is a very\n  different task from optimizing for individual execution.  it's somewhat\n  like optimizing for having fun in your sandbox compared to saving a city\n  billions of dollars through excellence in civil engineering.\n\n#:Erik\n\n",
  "date": "2000-03-03",
  "author": "Erik Naggum",
  "references": [],
  "source": "naggum"
}