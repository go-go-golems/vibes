{
  "url": "https://www.xach.com/naggum/articles/3162927272540679@naggum.no.html",
  "id": "3162927272540679@naggum.no",
  "title": "Re: Common Lisp interpretation by emacs",
  "content": "\nSubject: Re: Common Lisp interpretation by emacs\nFrom: Erik Naggum <erik@naggum.no>\nDate: 2000/03/24\nNewsgroups: comp.lang.lisp\nMessage-ID: <3162927272540679@naggum.no>\n\n* Barry Margolin\n| I interpreted it as \"can't be done in the current Emacs because it's not\n| written in Common Lisp\".  I was assuming that your message was referring\n| to the thread subject, and trying to interpret the phrase in that light.\n\n  holy cow -- the level at which some people here work _so_ hard to find\n  something to quarrel over is flat out amazing.  get some _sleep_, dude!\n\n  yes, it would be possible to do in some Common Lisp implementations.\n  yes, it would be possible to do in something different than Common Lisp.\n  yes, it would be possible to do in something entirely different than Emacs.\n\n  this _completely_ invalidates you quibbling \"because it's not written in\n  Common Lisp\".  the causal relationship you so adamantly seek is absent.\n\n  why do I want to do it Common Lisp?  is \"duh!\" a satisfactory answer or\n  do you actually have to have this _explained_ to you, Barry?  one could\n  almost believe you have been getting really upset over something and are\n  not getting over it.  this _has_ happened before.  is it recurring?\n\n| If I understand you correctly, the point you're making is that some CL\n| implementors have already implemented some things (like FFI) that haven't\n| been implemented in Emacs Lisp yet.  So what you're really comparing are\n| implementations, not languages.  None of these things are mentioned by,\n| nor even hinted at by, the ANSI CL spec.\n\n  I don't consider \"Common Lisp\" to be restricted to what's strictly in the\n  standard unless I explicitly and specifically name the standard or make\n  it the context.  that's why I _also_ don't require everything I think is\n  useful to be part of the standard before I can use it and why I don't\n  believe that using implementation extensions is evil or any of the other\n  numerous anal-retentive attitudes that flourish in some subcommunities of\n  this newsgroup under the guise of \"open source\".\n\n  I will regret it if it is now necessary to verbosely state \"I use an\n  implementation of Common Lisp in a development environment conducive to\n  the goals of the Common Lisp language\" every time one wishes to say \"I\n  use Common Lisp\", but considering the personal needs of some people here\n  (and their history of same, which I'm reminded of) to find flaws and\n  quarrel where it has absolutely zero constructive value, maybe it's time\n  to post in HTML with hypertext links from just about every word to pages\n  upon pages of disclaimers and explanations.\n\n| The fact that the Lisp implementations with FFI are all CL could almost\n| be considered a coincidence.\n\n  sure, and that's perfectly fine by me.  most of the interesting stuff\n  that happens in this world is by coincidence.  it would be foolish to\n  deny or belittle facts merely because they are coincidences, of course,\n  but I assume that something like that underlies your argument, which I\n  must therefore reject as rather specious.\n\n| If you can contemplate the resources being available for this, why can't\n| you imagine those same resources being applied to adding these features\n| to Emacs Lisp?\n\n  I can.  I have.  you're abaout five years too late with your question.\n  why do you assume so arrogantly that you are the first person on this\n  planet to have thought of counter-arguments?  I find that puzzling.  I\n  find it even more puzzling that the question is posed to aggressively.\n  if you have a personal problem you wish to raise, please don't feel\n  obliged to wrap it in gift paper like a pseudo-technical discussion.\n\n| It would certainly have been nice if Emacs had been written in Common\n| Lisp to begin with.  But now there's a huge body of code (the Emacs\n| source itself and all the public packages that are avaiable) that's\n| dependent on the current dialect.  If Emacs were converted to Common Lisp\n| it could essentially set it back a decade or more as we wait for people\n| to recode all their packages to be compatible.\n\n  you are certainly free to assume that this is the only way to think about\n  this problem and you are equally free to assume that noobody else would\n  have the wherewithal to solve technical problems of this kind, either.\n  the phrasing makes it abundantly clear that it has zero value to educate\n  you against your will on this topic, and so I won't even try.  it would,\n  as has been said about another pointless endeavor, waste my time and\n  annoy you.\n  \n#:Erik\n\n",
  "date": "2000-03-24",
  "author": "Erik Naggum",
  "references": [],
  "source": "naggum"
}