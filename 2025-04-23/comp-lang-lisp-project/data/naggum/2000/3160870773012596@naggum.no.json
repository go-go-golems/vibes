{
  "url": "https://www.xach.com/naggum/articles/3160870773012596@naggum.no.html",
  "id": "3160870773012596@naggum.no",
  "title": "Re: A modest proposal (long)",
  "content": "\nSubject: Re: A modest proposal (long)\nFrom: Erik Naggum <erik@naggum.no>\nDate: 2000/03/01\nNewsgroups: comp.lang.lisp\nMessage-ID: <3160870773012596@naggum.no>\n\n* Erann Gat\n| *You* might not have DEFVARed X, but how do you know that Joe didn't?\n\n  it seems to me that this the fundamental question.  the answer lies in\n  the implementation's excellence in implementing the function `describe'\n  and any other environment-querying functions.\n\n  however, there _is_ something we can and should do: add explicit support\n  for retrieving this important piece of information about a symbol, apart\n  from the rather obvious user interface issues like querying the system\n  when at a symbol name in Emacs.  the compiler and the interpreter could\n  also be asked to produce warnings about special variables for those who\n  need them.  (I'd favor declaring variables special locally as a nice way\n  to document the known special effects and also silence such warnings.)\n\n  removing special variables because they confuse a few people is a typical\n  \"modern\" reaction to the lack of diligence and effort that \"modern\" users\n  are no longer expected to expend in learning anything.  this is simply a\n  beginner's issue.  Common Lisp used to cater to experienced programmers\n  at the cost of having to learn it, like a _skill_, something people of\n  reasonable competence levels would _value_.  such is of course terribly\n  politically incorrect in this day and age, where blathering idiots get to\n  vote as many times as they can by virtue of forgetting the question and\n  anyone with any experience at all is considered prejudiced by virtue of\n  not answering all questions up for vote with a blank stare.\n\n  I vote that Common Lisp remain a language that needs to be learned and\n  studied, and instead focus our attention on stuff that actually affects\n  users of all categories much more than this trifling issue, like being\n  compatible with the notion in languages with which we would like to\n  communicate of what constitutes a symbol name: the actual, literal\n  sequence of characters (dollar signs included), not some case-mangled\n  version of same.\n\n  I also vote that somebody write \"the complete idiot's guide to special\n  variables\" instead of proposing silly language changes.\n\n| $x == (symbol-value 'x)\n\n  I think \"Common Perl\" would be a good name for your modified language,\n  with syntax in macros and equal signs and all.  yuck.\n\n#:Erik\n\n",
  "date": "2000-03-01",
  "author": "Erik Naggum",
  "references": [],
  "source": "naggum"
}