{
  "url": "https://www.xach.com/naggum/articles/3161195138352807@naggum.no.html",
  "id": "3161195138352807@naggum.no",
  "title": "Re: [executables] was: why Haskell hasn't replaced CL yet?",
  "content": "\nSubject: Re: [executables] was: why Haskell hasn't replaced CL yet?\nFrom: Erik Naggum <erik@naggum.no>\nDate: 2000/03/04\nNewsgroups: comp.lang.lisp\nMessage-ID: <3161195138352807@naggum.no>\n\n* not.for.email@not.for.spam\n| What kind of political agenda could I possibly have?  Even if my point of\n| view seems like completely irrational engineering, that doesn't make it\n| political.  I want a programming language and development environment\n| that meets several criteria, some of which may seem more rational to you\n| than others.  I'm taking a lot of factors into account and probably\n| giving most of those factors different weights than you would.  That\n| doesn't make me your political enemy.\n\n  it seems reasonable to assume that you failed to read the whole sentence\n  you just quoted a tiny little the part of.  let me try it again:\n\n  if you have problems with this extra \"layer\" of code, yet observe that\n  you get dramatically improved performance, which you would if you tried\n  it instead of just rejecting any other solutions than \"run the program\",\n  I'd say you have a political agenda and not an engineering problem,\n  anymore.\n\n  the keyword here is \"rejecting any other solutions\".  being dead set on\n  exploring only a particular solution space _is_ a political decision on\n  your part.  you can argue for its engineering _necessity_, but it is\n  still a political decision.  believing otherwise does you no good.\n\n  you seem to be extraordinarily focused on not seeing your problems other\n  than in light of how you can solve them with technology you already know.\n  this is the really exasperating part of trying to tell you something new\n  that might change your perception of the _problem_, not the solutions.\n  and as with every other political decision where people get \"stuck\" in\n  their pet problems, we find that they don't really want any solutions,\n  but will go on and on and on and on about their problem.  so there's no\n  telling when some benchmark-crazed doofus will be satisfied, because\n  there's nothing he actually wants to _know_.  such unfocusedness is\n  rampant in bad engineering circles where political agendas are much more\n  important than solving problems.  you find them here in comp.lang.lisp at\n  times, too, where someone comes up with something he _desperately_ wants\n  to do only particular way and any suggestions otherwise fall on deaf ears.\n\n#:Erik\n\n",
  "date": "2000-03-04",
  "author": "Erik Naggum",
  "references": [],
  "source": "naggum"
}