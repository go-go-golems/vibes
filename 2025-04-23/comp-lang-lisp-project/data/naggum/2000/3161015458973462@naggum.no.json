{
  "url": "https://www.xach.com/naggum/articles/3161015458973462@naggum.no.html",
  "id": "3161015458973462@naggum.no",
  "title": "Re: A modest proposal (long)",
  "content": "\nSubject: Re: A modest proposal (long)\nFrom: Erik Naggum <erik@naggum.no>\nDate: 2000/03/02\nNewsgroups: comp.lang.lisp\nMessage-ID: <3161015458973462@naggum.no>\n\n* Erann Gat\n| Pretty hard, apparently.  My first choice would have been to add (declare\n| (lexical ...))  But that was tried and rejected be people who understand\n| the problem much better than I do.\n\n  proposals are rejected or adopted in context.  if a good idea is served\n  alone or in a context that is not conducive to furthering principles that\n  are valued higher by others than some small improvement, it will, as it\n  should, be rejected.  how can _anyone_ have a problem understanding this?\n  have you never proposed something, had it rejected, then seen it picked\n  up by others only to be adopted?  this is clearly not because people hate\n  you, but because you didn't do your homework, and somebody else did.\n\n| Thank God we have Erik to guide us to worthwhile problems!\n\n  huh?  were you _consciously_ trying to guide us to a _worthless_ problem,\n  or is it wrong for _me_ to guide to worthwhile problems, while _you_ can\n  pick worthwhile problems at will?  no wonder your proposals don't get\n  accepted if this is how you deal with contributions.  sheesh!\n\n| >   and IMNSHO, it isn't bad at all.  I have pointed out that we need a few\n| >   accessors into the environment to solve your uncertainty problem, and\n| >   perhaps we need a `notspecial' or `lexical' declaration to be able to\n| >   undo the pervasive effects of the `special' declaration\n| \n| Like I said, this was proposed and rejected.  Why beat a dead horse?\n\n  I feel like I'm spoonfeeding a child.  it's because it's a question of\n  getting agreement among people who have already made up their mind about\n  a number of issues you may not know about, and this means you must not\n  piss people off with pure _drivel_.  as I have strongly indicated, your\n  inclusion of silly new syntax is a _good_ reason to reject all of your\n  proposal.  like the old saying goes, with all this shit, there must be a\n  pony somewhere, take away the crud, and what's left may not be a dead\n  horse.  but feel free to blame somebody for your failure to get agreement.\n\n| And I care so much about the language that I'm unwilling to drop the\n| matter just because some arrogant self-appointed guru says I should.\n\n  oh, geez, get _over_ yourself.  what's this, the emperor's new argument?\n  who do you think you're fooling?\n\n  isn't it just _too_ odd how often some doofus \"self-appoints\" someone\n  _else_ to some status to which they themselves would never actually\n  _self_-appoint themselves?  what's the point with such dishonesty and\n  such incredible silly behavior as to pretend that others _self_-appoint\n  themselves when in fact there's a lunatic at large who does both the\n  appointing and the accusation of such appointing all by himself?\n  whatever is _wrong_ with you?  you've come up with a bunch of really bad\n  thinking and it must be shot down fast before you revamp the whole\n  language, but still, there are a few good things in there and there's\n  some work that can be turned into productive ideas and proposals, but\n  what do you do?  you're only being silly and negative and concentrate on\n  dead horses and rejection.  and now you're out picking a silly fight?\n  what's the _point_ with this?  pull yourself _together_, damnit!\n\n| BTW, why would adding a LEXICAL declaration be any less disruptive than\n| allowing variable names of the form (special X)?  The vendors would still\n| have to change their implementations to support it.  Unlike other\n| declarations, you can't ignore SPECIAL/LEXICAL declarations and still\n| preserve correct semantics.  This fact alone indicates that declarations\n| are the wrong place for this information.\n\n  well, I don't generally and didn't now make just one big proposal and\n  feel personally defeated when it was rejected as a silly idea.  believe\n  it or not, but I have tried to figure out what would completely supersede\n  your silly idea such that even you would be happier with the solution.\n  this, however, is doomed to fail miserably as long as you only take the\n  negative views on everything, completely ignore the good stuff (notice\n  that I don't) I say, and huff and puff a lot instead of trying to solve\n  the _problem_ you have, the _adopted_ solution to which is very unlikely\n  to be whatever you dreamt up to begin with, anyway.  you're not being\n  constructive about this at all.  that annoys me to no end, because you\n  raise issues that need to be resolved, and the way you go about it, it's\n  unlikely that we will very find the consensus to resolve them.  again,\n  pull yourself together, damnit!\n\n| > | Works the way I'd expect it to.\n| > \n| >   so try typing in (setf (readtable-case *readtable*) :upcase) and tell me\n| >   what you expect to happen and/or that this is not a useful thing to do.\n| >   (note again that this is no longer a question of special variables.)\n| \n| I would expect to have to hold down the shift-lock key before I could\n| set the readtable case back to upcase.  Honestly, I don't see the problem\n| here.\n\n  OK, could you explain why it is unreasonable to think that holding down\n  the shift key while typing that line in is a _misfeature_?  can you\n  explain why it is unreasonable to give a conforming Common Lisp system\n  the ability to deal with :preserve _and_ lower-case, like beginners and\n  experts alike see in all the textbooks and examples on the Net and which\n  they have come to expect from _other_ languages they use?\n\n  I'm doing this also as an experiment to see if you can at all relate to\n  what other people tell you about their problems, since I have evidence\n  that you have a very hard time dealing with stuff you don't dream up on\n  your own, and if you can at least show that you can wrap your head around\n  another problematic issue, there might be grounds for figuring out what\n  would _really_ solve your other problems, without _having_ to accept your\n  proposals verbatim.  as I said, you have raised certain relevant issues\n  that I think are quite important, but only to be met with childish\n  bickering and an _incredibly_ stupid \"self-appointed guru\", instead of a\n  desire to help resolve the parts of your concerns that others respond\n  _well_ to.  I could do without the rampant stupidity, so what _is_ your\n  problem?  exercise some mental _focus_, dude!\n\n  sheesh!\n\n#:Erik\n\n",
  "date": "2000-03-02",
  "author": "Erik Naggum",
  "references": [],
  "source": "naggum"
}